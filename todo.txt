What is the core difference between a set and a list when sorting?

Sometimes, I want to find the entry that satisfies the most of my attributes as possible.

Sometimes, I am just happy if the thing is present in the list.

These both have nothing to do with the number of attributes.  Cases:

1. Cars.
Say we're looking for a car with heated seats, A/C, sport mode, etc.
We want the one that matches the most of these, therefore, set union size / selected options size.

2. Restaurants.
We're looking for dinner, we'd be down for either American, Indian, or Mexican food, but not seafood or cocktails.
Any place with any of these attributes is satisfactory.
But if a place can have multiple attributes (reservations, american, cocktails) this requires a list.
So, any set intersection is 1, otherwise is 0.

I think everything is actually covered in those two cases, it's tricky because the schema is the exact same.
Maybe let the user pick if they want percentage match mode, or just has one mode?